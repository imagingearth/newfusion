% fusion_Change.m
% Version 1.1.1
% Step 5
% Change Detection
%
% Project: Fusion
% By Xiaojing Tang
% Created On: 12/16/2014
% Last Update: 2/10/2015
%
% Input Arguments: 
%   main (Structure) - main inputs of the fusion process generated by
%     fusion_inputs.m.
%
% Output Arguments: NA
%
% Usage: 
%   1.Customize the main input file (fusion_inputs.m) with proper settings
%       for specific project.
%   2.Run fusion_Inputs() first and get the returned structure of inputs
%   3.Run previous steps first to make sure required data are already
%       generated.
%   4.Run this function with the stucture of inputs as the input argument.
%
% Version 1.0 - 1/19/2015
%   This script creates difference and change image for the fusion process.
%
% Updates of Version 1.1 - 1/21/2015
%   1.Added support for brdf correction.
%
% Updates of Version 1.1.1 - 2/10/2015
%   1.Added a toggle for bias correction.
%
% Released on Github on 12/16/2014, check Github Commits for updates afterwards.
%----------------------------------------------------------------

function fusion_Change(main)

    % start timer
    tic;
    
    % check platform
    plat = main.set.plat;
    
    % loop through all etm images
    for I_Day=1:numel(main.date.swath)
        
        % get date information of all images
        Day = main.date.swath(I_Day);
        DayStr = num2str(Day);

        % check if result already exist
        File.Check = dir([main.output.modsubc plat '*' num2str(main.set.res) '*' DayStr '*']);
        if numel(File.Check) >= 1
            disp([DayStr ' already exist, skip this date.']);
            continue;
        end

        % find MOD09SUB files
        File.MOD09SUB = dir([main.output.modsubf,plat,'09SUB*.',num2str(main.set.res),'*',DayStr,'*']);

        if numel(File.MOD09SUB)<1
            disp(['Cannot find MOD09SUB for Julian Day: ', DayStr]);
            continue;
        end

        % loop through MOD09SUB file of current date
        for I_TIME = 1:numel(File.MOD09SUB)
            TimeStr = regexp(File.MOD09SUB(I_TIME).name,'\.','split');
            TimeStr = char(TimeStr(4));

            % load MOD09SUBBRDF
            BRDFlag = main.set.brdf;
            if BRDFlag == 1
                File.MOD09SUBB = dir([main.output.modsubbrdf,plat,'09SUBFB.',num2str(main.set.res),'m.',DayStr,'.',TimeStr,'.mat']);
                if numel(File.MOD09SUB) < 1
                    disp(['Cannot find MOD09SUBFB for Julian Day: ', DayStr]);
                    disp(['Only non-BRDF corrected results are produced for Julian Day: ', DayStr]);
                    BRDFlag = 0;
                end
            end
            
            % load MOD09SUB or MOD09SUBBRDF
            if BRDFlag == 1 
                MOD09SUB = load([FileName.MOD09SUBB,File.MOD09SUBB.name]);
            else
                MOD09SUB = load([FileName.MOD09SUB,File.MOD09SUB(I_TIME).name]);
            end

            % make difference and change maps
            [MOD09SUB.DIF09RED, MOD09SUB.CHG09RED] = swathDIF(MOD09SUB.MOD09RED,...
                MOD09SUB.FUS09RED,MOD09SUB.QACloud,1,400,1,main.set.bias);
            [MOD09SUB.DIF09NIR, MOD09SUB.CHG09NIR] = swathDIF(MOD09SUB.MOD09NIR,...
                MOD09SUB.FUS09NIR,MOD09SUB.QACloud,1,600,1,main.set.bias);
            % calculate ndvi and ndvi change and dif images
            MOD09SUB.MOD09NDVI = (MOD09SUB.MOD09NIR-MOD09SUB.MOD09RED)...
                ./(MOD09SUB.MOD09NIR+MOD09SUB.MOD09RED);
            MOD09SUB.FUS09NDVI = (MOD09SUB.FUS09NIR-MOD09SUB.FUS09RED)...
                ./(MOD09SUB.FUS09NIR+MOD09SUB.FUS09RED);
            [MOD09SUB.DIF09NDVI, MOD09SUB.CHG09NDVI] = swathDIF(MOD09SUB.MOD09NDVI,...
                MOD09SUB.FUS09NDVI,MOD09SUB.QACloud,1,0.2,1,main.set.bias);

            if main.set.res == 500
                [MOD09SUB.DIF09BLU, MOD09SUB.CHG09BLU] = swathDIF(MOD09SUB.MOD09BLU,...
                    MOD09SUB.FUS09BLU,MOD09SUB.QACloud,1,200,1,main.set.bias);
                [MOD09SUB.DIF09GRE, MOD09SUB.CHG09GRE] = swathDIF(MOD09SUB.MOD09GRE,...
                    MOD09SUB.FUS09GRE,MOD09SUB.QACloud,1,200,1,main.set.bias);
                [MOD09SUB.DIF09SWIR, MOD09SUB.CHG09SWIR] = swathDIF(MOD09SUB.MOD09SWIR,...
                    MOD09SUB.FUS09SWIR,MOD09SUB.QACloud,1,500,1,main.set.bias);
                [MOD09SUB.DIF09SWIR2, MOD09SUB.CHG09SWIR2] = swathDIF(MOD09SUB.MOD09SWIR2,...
                    MOD09SUB.FUS09SWIR2,MOD09SUB.QACloud,1,400,1,main.set.bias);
            end

            % save
            save([main.output.modsubc,plat,'09SUBC.',num2str(main.set.res),'m.',DayStr,'.',TimeStr,'.mat'],'-struct','MOD09SUB');
            disp(['Done with ',DayStr,' in ',num2str(toc,'%.f'),' seconds']);
        end
    end

    % done
    
end
